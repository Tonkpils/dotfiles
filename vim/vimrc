set nocompatible				" essential
set t_Co=256 					" Enable 256 colors

filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'vim-scripts/Align'
Plugin 'bling/vim-airline'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'scrooloose/nerdtree'
Plugin 'vim-ruby/vim-ruby'
Plugin 'fatih/vim-go'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'tpope/vim-rails'

" Entering 'vim/bundle/html5.vim'
" origin	git://github.com/othree/html5.vim.git (fetch)
" Entering 'vim/bundle/mix'
" origin	git://github.com/mattonrails/vim-mix.git (fetch)
" Entering 'vim/bundle/mustache'
" origin	git://github.com/mustache/vim-mustache-handlebars.git (fetch)
" Entering 'vim/bundle/nerdcommenter'
" origin	git@github.com:scrooloose/nerdcommenter.git (fetch)
" Entering 'vim/bundle/rust.vim'
" origin	git@github.com:rust-lang/rust.vim.git (fetch)
" Entering 'vim/bundle/sensible'
" origin	git://github.com/tpope/vim-sensible.git (fetch)
" Entering 'vim/bundle/supertab'
" origin	git://github.com/ervandew/supertab.git (fetch)
" Entering 'vim/bundle/tagbar'
" origin	git://github.com/majutsushi/tagbar.git (fetch)
" Entering 'vim/bundle/vim-bundler'
" origin	git://github.com/tpope/vim-bundler.git (fetch)
" Entering 'vim/bundle/vim-cjsx'
" origin	git@github.com:mtscout6/vim-cjsx.git (fetch)
" Entering 'vim/bundle/vim-coffee-script'
" origin	git@github.com:kchmck/vim-coffee-script.git (fetch)
" Entering 'vim/bundle/vim-colors-solarized'
" origin	git://github.com/altercation/vim-colors-solarized.git (fetch)
" Entering 'vim/bundle/vim-instant-markdown'
" origin	git://github.com/suan/vim-instant-markdown.git (fetch)
" Entering 'vim/bundle/vim-javascript'
" origin	git://github.com/pangloss/vim-javascript.git (fetch)
" Entering 'vim/bundle/vim-jsx'
" origin	git@github.com:mxw/vim-jsx.git (fetch)
" Entering 'vim/bundle/vim-markdown'
" origin	git://github.com/tpope/vim-markdown.git (fetch)
" Entering 'vim/bundle/vitality.vim'
" origin	git://github.com/sjl/vitality.vim.git (fetch)
" Entering 'vim/bundle/xmledit'
" origin	git@github.com:sukima/xmledit.git (fetch)
"
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

colorscheme molokai

set autoread 					" No prompt for file changes outside Vim

" Never let vim write a backup file
set nobackup
set noswapfile

" WhiteSpace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

function! TrimWhiteSpace()
  %s/\s\+$//e
endfunction

au BufNewFile,BufReadPost *.md set filetype=markdown

au FileType vim               set shiftwidth=2 tabstop=2 expandtab
au FileType sh                set shiftwidth=2 tabstop=2 expandtab
au FileType eruby             set shiftwidth=2 tabstop=2 expandtab
au FileType html.handlebars   set shiftwidth=2 tabstop=2 expandtab
au FileType coffee            set shiftwidth=2 tabstop=2 expandtab
au FileType css               set shiftwidth=2 tabstop=2 expandtab
au FileType javascript        set shiftwidth=2 tabstop=2 expandtab
au FileType ruby              set shiftwidth=2 tabstop=2 expandtab
au FileType html              set shiftwidth=2 tabstop=2 expandtab
au FileType json              set shiftwidth=2 tabstop=2 expandtab
au FileType make              set noexpandtab shiftwidth=2 tabstop=2 syntax=nasm

" Go mappings
au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)
au FileType go nmap <Leader>dt <Plug>(go-def-tab)
au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>gd <Plug>(go-doc)

" NERDTree
" Close vim if NERDTree is the only window left open
au bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
let g:NERDTreeChDirMode=2

" White space madness
au BufWinEnter * match ExtraWhitespace /\s\+$/
au InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
au InsertLeave * match ExtraWhitespace /\s\+$/
au BufWinLeave * call  clearmatches()
au BufWritePre * :call TrimWhiteSpace()

" Mappings
"
let mapleader = "," 						" Remap leader to ','
nnoremap <Leader>w :w<CR>
map <C-c> :NERDTreeToggle<CR>
map <C-l> :tabn<CR>
map <C-h> :tabp<CR>
map <C-n> :tabnew<CR>

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>
" Insert Mode Maps
"
" ^F to insert file's name
imap <C-F> <C-R>=expand("%")<CR>

if executable("ack")
  set grepprg=ack\ -H\ --nogroup\ --ignore-dir=tmp\ --ignore-dir=coverage
endif

" Line numbers
set number
set numberwidth=4

" Airline Plugin
let g:airline_section_b = '%{fugitive#statusline()}'
let g:airline#extensions#tabline#enabled = 1

" SuperTab Completion Plugin
let g:SuperTabDefaultCompletionType = "context"

" Vim-Go
let g:go_fmt_command = "goimports"
" let g:go_highlight_functions = 1
" let g:go_highlight_methods = 1
" let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
" Can't use this following option with goimports :(
" let g:go_fmt_options = "-s"

" vim-javascript
" let javascript_enable_domhtmlcss=0
" let b:javascript_fold

" vim-jsx
" See https://github.com/mxw/vim-jsx for options
" let g:jsx_ext_required = 0

" vim-multiple-cursors
" See https://github.com/terryma/vim-multiple-cursors

" TagBar Plugin
nmap <F4> :TagbarToggle<CR>

" set autochdir
set tags+=./tags;

