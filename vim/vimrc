set nocompatible				" essential
set t_Co=256 					" Enable 256 colors

execute pathogen#infect()

colorscheme molokai

" Never let vim write a backup file
set nobackup
set noswapfile

" WhiteSpace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

function! TrimWhiteSpace()
  %s/\s\+$//e
endfunction

au BufNewFile,BufReadPost *.md set filetype=markdown

au FileType python set tabstop=4 |set shiftwidth=4|set expandtab
au FileType ruby setlocal shiftwidth=2 tabstop=2 softtabstop=2 |set expandtab
au FileType c setlocal shiftwidth=2 tabstop=2 expandtab
au FileType make set noexpandtab shiftwidth=2 tabstop=2 syntax=nasm
au FileType java set shiftwidth=2 tabstop=2 softtabstop=2 |set expandtab
au FileType html set shiftwidth=2
au Filetype eruby set shiftwidth=2

" Go mappings
au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)
au FileType go nmap <Leader>dt <Plug>(go-def-tab)
au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>gd <Plug>(go-doc)

" NERDTree
" Close vim if NERDTree is the only window left open
au bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
" White space madness
au BufWinEnter * match ExtraWhitespace /\s\+$/
au InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
au InsertLeave * match ExtraWhitespace /\s\+$/
au BufWinLeave * call  clearmatches()
au BufWritePre * :call TrimWhiteSpace()

" Mappings
"
let mapleader = "," 						" Remap leader to ','
nnoremap <Leader>w :w<CR>
map <C-c> :NERDTreeToggle<CR>
map <C-l> :tabn<CR>
map <C-h> :tabp<CR>
map <C-n> :tabnew<CR>
" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>
" Insert Mode Maps
"
" ^F to insert file's name
imap <C-F> <C-R>=expand("%")<CR>

if executable("ack")
  set grepprg=ack\ -H\ --nogroup\ --ignore-dir=tmp\ --ignore-dir=coverage
endif

" Line numbers
set number
set numberwidth=4

" Airline Plugin
let g:airline_section_b = '%{fugitive#statusline()}'
let g:airline#extensions#tabline#enabled = 1

" SuperTab Completion Plugin
let g:SuperTabDefaultCompletionType = "context"

" Vim-Go
let g:go_fmt_command = "goimports"
" let g:go_highlight_functions = 1
" let g:go_highlight_methods = 1
" let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
" Can't use this following option with goimports :(
" let g:go_fmt_options = "-s"

" TagBar Plugin
nmap <F4> :TagbarToggle<CR>

